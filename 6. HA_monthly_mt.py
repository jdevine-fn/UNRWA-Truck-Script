import os
import pandas as pd
import numpy as np
from datetime import datetime
import platform

# =====================
# STEP 6: MONTHLY HUMANITARIAN FOOD MT BY ENTRY
# =====================

# Get the current date in the format YYYYMMDD (to match the folder created in previous steps)
current_date = datetime.now().strftime('%Y%m%d')

# Determine the user's desktop location (macOS and Windows compatibility)
if platform.system() == "Darwin":  # macOS
    desktop = os.path.join(os.path.expanduser("~"), "Desktop")
elif platform.system() == "Windows":  # Windows
    desktop = os.path.join(os.path.expanduser("~"), "Desktop")
else:
    raise Exception("Unsupported operating system. This script works on macOS and Windows only.")

# Path to the folder created by previous steps (same date-based folder)
folder_name = f"UNRWA Truck Data_{current_date}"
data_dir = os.path.join(desktop, folder_name)

# File path (input from step 4)
file_path = os.path.join(data_dir, "unrwa_trucks.xlsx")

# Load the data from the 'unrwa_trucks_kcal_mt' sheet generated by Script 4
data = pd.read_excel(file_path, sheet_name='unrwa_trucks_kcal_mt')

# Check for necessary columns
required_columns = ['date', 'sector', 'truck_food_mt', 'Crossing']
for col in required_columns:
    if col not in data.columns:
        raise KeyError(f"The required column '{col}' does not exist in the dataset. Please check the data or previous processing steps.")

# Ensure 'date' column is of datetime type and extract month
data['date'] = pd.to_datetime(data['date'])
data['Month'] = data['date'].dt.to_period('M')

# Filter data for 'humanitarian' sector and truck_food_mt > 0
humanitarian_food_data = data[(data['sector'] == 'humanitarian') & (data['truck_food_mt'] > 0)]

# Group the data by 'Month' and 'Crossing', summing up 'truck_food_mt'
monthly_entry_totals = humanitarian_food_data.groupby(['Month', 'Crossing']).agg(
    monthly_food_mt=('truck_food_mt', 'sum')
).reset_index()

# Pivot the table so that each 'Crossing' value becomes a column
monthly_entry_pivot = monthly_entry_totals.pivot(index='Month', columns='Crossing', values='monthly_food_mt')

# Replace NaN values with zeros
monthly_entry_pivot = monthly_entry_pivot.fillna(0)

# Reset index to turn 'Month' into a column
monthly_entry_pivot = monthly_entry_pivot.reset_index()

# Optionally, you can rename the columns to make them more descriptive
monthly_entry_pivot.rename(columns={'Month': 'month'}, inplace=True)
monthly_entry_pivot.columns.name = None  # Remove the name 'Crossing' from columns

# Save the resulting table to a new sheet named 'monthly_hfa' in the existing Excel file
output_sheet_name = 'monthly_hfa'
with pd.ExcelWriter(file_path, mode='a', engine='openpyxl', if_sheet_exists='replace') as writer:
    monthly_entry_pivot.to_excel(writer, sheet_name=output_sheet_name, index=False)

print(f"Monthly humanitarian food MT by entry point saved to '{output_sheet_name}' sheet in '{file_path}'.")